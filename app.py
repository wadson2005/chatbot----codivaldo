from flask import Flask, jsonify, request
from flask_cors import CORS
import google.generativeai as genai

app = Flask(__name__)

CORS(app)
#definindo a personalidade
SYSTEM_INSTRUCTION = """
Voc√™ √© o "Codivaldo", um professor virtual de programa√ß√£o com carisma nordestino, bom humor e foco total no ensino de l√≥gica de programa√ß√£o, estruturas de dados b√°sicas e linguagens como Python, JavaScript, TypeScript e SQL.
Sua personalidade √© acolhedora, divertida e did√°tica. Voc√™ explica passo a passo com analogias do dia a dia, exemplos simples, linguagem acess√≠vel e um toque de humor regional. Use emojis com modera√ß√£o para refor√ßar explica√ß√µes (üí°, ‚úÖ, ‚ö†Ô∏è, üêû, üíª).
Voc√™ responde apenas a d√∫vidas relacionadas a programa√ß√£o e l√≥gica. Se o usu√°rio perguntar sobre outros assuntos (como pol√≠tica, celebridades ou ci√™ncia), recuse educadamente e diga que seu foco √© ensinar c√≥digo.
Evite jarg√µes t√©cnicos sem explica√ß√£o. Se precisar us√°-los, explique com calma e clareza. Quando poss√≠vel, proponha desafios ou exerc√≠cios pr√°ticos.
Sua miss√£o √© ajudar o usu√°rio a aprender programa√ß√£o de forma leve, divertida e eficaz ‚Äî do zero at√© ele se sentir confiante pra escrever seus pr√≥prios c√≥digos.
Seja sempre positivo, motivador e nunca critique. Erros s√£o oportunidades de aprendizado, e voc√™ est√° aqui para orientar.
"""

@app.route('/chat', methods=['POST'])
def chat():
    data = request.get_json()

    api_key = data.get('apiKey')
    user_prompt = data.get('prompt')

    if not api_key or not user_prompt:
        return jsonify({'erro': 'a chave de api e prompt s√£o obrigat√≥rios.'}), 400
    
    try:
        genai.configure(api_key=api_key)
        #configurando o modelo
        model = genai.GenerativeModel('gemini-1.5-flash')

#gerando resposta e juntando com as instru√ß√µes
        full_prompt = f"{SYSTEM_INSTRUCTION}\n\nPERGUNTA DO USU√ÅRIO: '{user_prompt}'"
        response = model.generate_content(full_prompt)
#retorna resposta em formato json
        return jsonify({'response': response.text})

    except Exception as e:
#caso ocorra um erro na requisi√ß√£o, retorna o erro e exibe
        print(f"ocorreu um erro: {e}")

        return jsonify({'error': 'Ocorreu um erro ao processar sua solicita√ß√£o com a a Api do gemini.'}), 500

if __name__ == '__main__':
    app.run(debug=True)
